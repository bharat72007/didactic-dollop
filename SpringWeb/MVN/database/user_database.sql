CREATE DATABASE IF NOT EXISTS TEST_ECOM;

CREATE TABLE IF NOT EXISTS TEST_ECOM.T_REGISTRATION(
	ID INT(5) NOT NULL AUTO_INCREMENT,
	FIRST_NAME  VARCHAR(100) NOT NULL,
	MIDDLE_NAME VARCHAR(100),
	LAST_NAME VARCHAR(100),
	PRIMARY_EMAIL VARCHAR(100),
	SECONDARY_EMAIL VARCHAR(100),
	MOBILE VARCHAR(15),
	DATE_ACCOUNT_CREATED DATETIME,
	PRIMARY KEY (`ID`)
);

CREATE TABLE IF NOT EXISTS TEST_ECOM.T_USERS(
	ID INT(5) NOT NULL AUTO_INCREMENT,
	USERNAME VARCHAR(100),
	PASSWORD VARCHAR(100),
	REGISTRATION_ID INT(5) NOT NULL,
	PRIMARY KEY (`ID`),
	FOREIGN KEY (`REGISTRATION_ID`) REFERENCES T_REGISTRATION(`ID`)
									ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS TEST_ECOM.T_LOGIN(
	ID INT(5) NOT NULL AUTO_INCREMENT,
	USER_ID INT(5) NOT NULL,
	LOGIN_TIME DATETIME,
	IS_SUCCESS_LOGIN ENUM('Y','N'),
	IP VARCHAR(50),
	COOKIE ENUM('Y','N'),
	PRIMARY KEY (`ID`),
	FOREIGN KEY (`USER_ID`) REFERENCES T_USERS(`ID`)
							ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS TEST_ECOM.T_PRODUCT_CATEGORY(
	ID INT(5) NOT NULL AUTO_INCREMENT,
	CATEGORRY_TITLE TEXT(500),
	CATEGORY_DESC TEXT(1000),
	CATEGORY_KEYWORDS TEXT(500),
	DATE_ADDED DATETIME,
	LAST_UPTO_DATE DATETIME,
	PRIMARY KEY (`ID`)
);

CREATE TABLE IF NOT EXISTS TEST_ECOM.T_PRODUCT_SUBCATEGORY(
	ID INT(5) NOT NULL AUTO_INCREMENT,
	CATEGORY_ID INT(5) NOT NULL,
	SUBCATEGORY_TITLE TEXT(500),
	SUBCATEGORY_DESC TEXT(500),
	SUBCATEGORY_KEYWORDS TEXT(500),
	DATE_ADDED DATETIME,
	LAST_UPTO_DATE DATETIME,
	PRIMARY KEY (`ID`),
	FOREIGN KEY (`CATEGORY_ID`) REFERENCES T_PRODUCT_CATEGORY(`ID`)
								ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS TEST_ECOM.T_PRODUCT(
	ID INT(5) NOT NULL AUTO_INCREMENT,
	CATEGORY_ID INT(5) NOT NULL,
	SUBCATEGORY_ID INT(5) NOT NULL,
	PRODUCT_TITLE TEXT(500),
	PRODUCT_DESC TEXT(1000),
	PRODUCT_KEYWORDS TEXT(500),
	PRODUCT_THUMBNAIL_URL VARCHAR(100),
	PRODUCT_ZOOM_URL1 VARCHAR(100),
	PRODUCT_ZOOM_URL2 VARCHAR(100),
	PRODUCT_ZOOM_URL3 VARCHAR(100),
	PRODUCT_SELLING_PRICE DECIMAL(6,2),
	DATE_ADDED DATETIME,
	LAST_UPTO_DATE DATETIME,
	PRIMARY KEY (`ID`),
	FOREIGN KEY (`CATEGORY_ID`) REFERENCES T_PRODUCT_CATEGORY(`ID`) ON DELETE CASCADE,
	FOREIGN KEY (`SUBCATEGORY_ID`) REFERENCES T_PRODUCT_SUBCATEGORY(`ID`) ON DELETE CASCADE										
);

CREATE TABLE IF NOT EXISTS TEST_ECOM.T_COUPONS(
	ID INT(5) NOT NULL AUTO_INCREMENT,
	COUPON_CODE VARCHAR(200),
	COUPON_DESC TEXT(500),
	PRODUCT_ID INT(5) NOT NULL,
	COUPON_ACTIVATION_DATE DATETIME,
	COUPON_EXPIRY_DATE DATETIME,
	COUPON_CASH_VALUE DECIMAL(2,2),
	DATE_ADDED DATETIME,
	LAST_UPTO_DATE DATETIME,
	PRIMARY KEY (`ID`),
	FOREIGN KEY (`PRODUCT_ID`) REFERENCES T_PRODUCT(`ID`)
											ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS TEST_ECOM.T_CART(
	ID INT(5) NOT NULL AUTO_INCREMENT,
	USER_ID INT(5) NOT NULL,
	PRODUCT_ID INT(5) NOT NULL,
	DATE_ADDED DATETIME,
	LAST_UPTO_DATE DATETIME,
	PRIMARY KEY (`ID`),
	FOREIGN KEY (`PRODUCT_ID`) REFERENCES T_PRODUCT(`ID`) ON DELETE CASCADE,
	FOREIGN KEY (`USER_ID`) REFERENCES T_USERS(`ID`) ON DELETE CASCADE										
	
);

/*
CREATE TABLE IF NOT EXISTS TEST_ECOM.T_USER_ADDRESS_TYPE(
	ID INT(5) NOT NULL AUTO_INCREMENT,
	ADDRESS_TYPE ENUM('BILLING','SHIPPING'),
	PRIMARY KEY (`ID`)
);
*/

CREATE TABLE IF NOT EXISTS TEST_ECOM.T_USER_ADDRESS_TYPE(
	ADDRESS_TYPE VARCHAR(20) NOT NULL PRIMARY KEY
);
/*Adding Permissible values to AddressType table
*/
INSERT INTO TEST_ECOM.T_USER_ADDRESS_TYPE VALUES ('BILLING'),('SHIPPING');



CREATE TABLE IF NOT EXISTS TEST_ECOM.T_PIN(
	ID INT(5) NOT NULL AUTO_INCREMENT,
	PINCODE INT(5)  NOT NULL ,
	AREA VARCHAR(200),
	PRIMARY KEY (`ID`)
);

CREATE TABLE IF NOT EXISTS TEST_ECOM.T_USER_ADDRESS(
	ID INT(5) NOT NULL AUTO_INCREMENT,
	USER_ID INT(5) NOT NULL,
	ADDRESS_TYPE VARCHAR(20) NOT NULL,
	ADDRESS_LINE1 VARCHAR(500),
	ADDRESS_LINE2 VARCHAR(500),
	LANDMARK TEXT(300),
	CITY TEXT(300),
	DISTRICT TEXT(3200),
	STATE TEXT(100),
	COUNTRY TEXT(100),
	PIN INT(5) NOT NULL,
	FOREIGN KEY (`USER_ID`) REFERENCES T_USERS(`ID`) ON DELETE CASCADE,
//	FOREIGN KEY (`ADDRESS_TYPE`) REFERENCES T_USER_ADDRESS_TYPE(`ADDRESS_TYPE`) ON DELETE CASCADE,
	FOREIGN KEY (`PIN`) REFERENCES T_PIN(`ID`) ON DELETE CASCADE,
	PRIMARY KEY (`ID`)
);

/*
CREATE TABLE IF NOT EXISTS TEST_ECOM.T_SHIPMENT_STATUS(
	ID INT(5) NOT NULL AUTO_INCREMENT,
	SHIPMENT_STATUS ENUM('SHIPPED','NOT SHIPPED','IN TRANSITION'),
	PRIMARY KEY (`ID`)
);
*/


CREATE TABLE IF NOT EXISTS TEST_ECOM.T_SHIPMENT_STATUS(
	SHIPMENT_STATUS VARCHAR(20) NOT NULL PRIMARY KEY
);
/*Adding Permissible values to AddressType table
*/
INSERT INTO TEST_ECOM.T_SHIPMENT_STATUS VALUES ('SHIPPED'),('NOT SHIPPED'),('IN TRANSITION');


/*
CREATE TABLE IF NOT EXISTS TEST_ECOM.T_PAYMENT_STATUS(
	ID INT(5) NOT NULL AUTO_INCREMENT,
	PAYMENT_STATUS 
	PRIMARY KEY (`ID`)
);
*/

CREATE TABLE IF NOT EXISTS TEST_ECOM.T_PAYMENT_STATUS(
	PAYMENT_STATUS VARCHAR(20) NOT NULL PRIMARY KEY
);
/*Adding Permissible values to AddressType table
*/
INSERT INTO TEST_ECOM.T_PAYMENT_STATUS VALUES ('PAID'),('NOT PAID'),('COD');




CREATE TABLE IF NOT EXISTS TEST_ECOM.T_INVOICE(
	ID INT(5) NOT NULL AUTO_INCREMENT,
	INVOICE_CREATED_DATE DATETIME,
	ORDER_ID INT(5) NOT NULL,
	NOTES TEXT(500),
	PRIMARY KEY (`ID`)
);

/*
CREATE TABLE IF NOT EXISTS TEST_ECOM.T_ORDER_STATUS(
	ID INT(5) NOT NULL AUTO_INCREMENT,
	ORDER_STATUS ENUM('CREATED','PACKED','FULFILLED'),
	PRIMARY KEY (`ID`)
);

*/

CREATE TABLE IF NOT EXISTS TEST_ECOM.T_ORDER_STATUS(
	ORDER_STATUS VARCHAR(20) NOT NULL PRIMARY KEY
);
/*Adding Permissible values to AddressType table
*/
INSERT INTO TEST_ECOM.T_ORDER_STATUS VALUES ('CREATED'),('PACKED'),('FULFILLED');



CREATE TABLE IF NOT EXISTS TEST_ECOM.T_USER_ORDER(
	ID INT(5) NOT NULL AUTO_INCREMENT,
	USER_ID INT(5) NOT NULL,
	ORDER_DATE DATETIME,
	CART_ID INT(5) NOT NULL,
	ORDER_STATUS VARCHAR(20) NOT NULL, 
	TOTAL_AMOUNT DECIMAL(6,2),
	SHIPMENT_STATUS VARCHAR(20) NOT NULL,
	PAYMENT_STATUS VARCHAR(20) NOT NULL,
	SHIPPING_ADDRESS_ID INT(5) NOT NULL,
	BILLING_ADDRESS_ID INT(5) NOT NULL,
	INVOICE_ID INT(5) NOT NULL,
	FOREIGN KEY (`ORDER_STATUS`) REFERENCES T_ORDER_STATUS(`ORDER_STATUS`) ON DELETE CASCADE,
	FOREIGN KEY (`SHIPMENT_STATUS`) REFERENCES T_SHIPMENT_STATUS(`SHIPMENT_STATUS`) ON DELETE CASCADE,
	FOREIGN KEY (`PAYMENT_STATUS`) REFERENCES T_PAYMENT_STATUS(`PAYMENT_STATUS`) ON DELETE CASCADE,
	FOREIGN KEY (`SHIPPING_ADDRESS_ID`) REFERENCES T_USER_ADDRESS(`ID`) ON DELETE CASCADE,
	FOREIGN KEY (`BILLING_ADDRESS_ID`) REFERENCES T_USER_ADDRESS(`ID`) ON DELETE CASCADE,
	FOREIGN KEY (`INVOICE_ID`) REFERENCES T_INVOICE(`ID`) ON DELETE CASCADE,
	PRIMARY KEY (`ID`)
);

